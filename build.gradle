group 'randomclient'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.4-3'
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url 'https://jitpack.io'
        }

    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = "0.13"
group = "cc.hyperium"
archivesBaseName = "Hyperium"

minecraft {
    version = "1.8.9"
    mappings = "stable_20"
    tweakClass = "randomclient.launch.ClientTweaker"
    runDir = 'run'
    clientJvmArgs = ["-XX:-DisableExplicitGC"]
    makeObfSourceJar = false
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

mixin {
    // Specify "notch" or "searge" here
    defaultObfuscationEnv notch
    add sourceSets.main, "mixin.hyperium.refmap.json"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

processResources {
    inputs.files "src/main/resources"
    outputs.dir "build/classes/main"
    copy {
        from("src/main/resources")
        into("build/classes/main")
    }
}

jar {
    dependsOn configurations.compile
    from {
        configurations.embed.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

jar {
    manifest.attributes(
            "MixinConfigs": 'mixins.randomclient.json',
            "TweakClass": 'randomclient.launch.ClientTweaker',
            "TweakOrder": 0,
            "Manifest-Version": 1.0,
            'Main-Class': 'randomclient.installer.Installer'
    )
    configurations.embed.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
            exclude 'org/jetbrains/annotations', 'org/jetbrains/annotations/**'
        }
    }
}